name: Deploy Crisp App

env:
  rg_name: crisp_rg
  crisp_aks: crisp_aks
  crisp_sa: crisp_sa
  crisp_reg: crisp_reg

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Azure CLI
      uses: azure/login@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'

    - name: Build the Docker image
      run: |
        
        az acr login --name crispreg2
        docker build . --file Dockerfile --tag crispreg2.azurecr.io/crisp:0.1
        docker push crispreg2.azurecr.io/crisp:0.1
    
    - name: Deploy Infrastructure
      run: |
        az group create --name $rg_name --location eastus2
        az group deployment create --resource-group $rg_name --template-file arm_templates/aks.json --parameters aks_cluster_name=$crisp_aks
        az group deployment create --resource-group $rg_name --template-file arm_templates/sa.json --parameters storage_account_name=$crisp_sa
        az group deployment create --resource-group $rg_name --template-file arm_templates/acr.json --parameters registry_name=$crisp_reg
        

    - name: Configure kubectl
      run: |
        az aks get-credentials --resource-group Crisp_group --name Crisp --overwrite-existing

    - name: Run kubectl command
      run: |
        kubectl get pods --all-namespaces
        kubectl create secret docker-registry acr-secret \
          --docker-server=crispreg.azurecr.io \
          --docker-username=cfff6db8-6ea9-4769-a9c4-3f5f2caa71fb \
          --docker-password={tbd} \
          --docker-email=savitz.daniel@gmail.com
        kubectl create secret generic sakey --from-literal=sakey={needKey}

    - name: create k8s deployment
      run: |
        kubectl get pods --all-namespaces
        kubectl apply -f /Users/mattsavitz/Documents/Dan2/deployment.yaml
        kubectl delete -f /Users/mattsavitz/Documents/Dan2/deployment.yaml
